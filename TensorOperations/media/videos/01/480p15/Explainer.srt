1
00:00:00,000 --> 00:00:03,884
<lang xml:lang="ko-KR">이러한 모양의 데이터가 주어져 있다고 가정해 보겠습니다. </lang>

2
00:00:04,000 --> 00:00:07,152
<lang xml:lang="ko-KR">각 요소에 </lang><lang xml:lang="en-US">relu</lang>

3
00:00:07,252 --> 00:00:09,056
<lang xml:lang="ko-KR">함수를 적용시키는 코드를 작성하고

4
00:00:09,156 --> 00:00:10,404
싶습니다. 코드를 생각해 보기 바랍니다.</lang>

5
00:00:11,466 --> 00:00:13,454
<lang xml:lang="ko-KR">일단 힌트는 이것입니다.</lang>

6
00:00:19,533 --> 00:00:25,469
<lang xml:lang="ko-KR">코드가 떠오르지 않았으면, 이 애니메이션이 끝나기 전에 코드를 완성하기

7
00:00:25,569 --> 00:00:29,947
바랍니다. 이 애니메이션이 끝났는데도 생각이 떠오르지 않으면 문제가 있는 것입니다.

8
00:00:30,047 --> 00:00:33,257
계속 보고 았지만 말고, 생각을 하기 바랍니다. </lang>

9
00:01:01,533 --> 00:01:02,945
<lang xml:lang="ko-KR">코드를 보겠습니다.</lang>

10
00:01:03,066 --> 00:01:05,885
<lang xml:lang="ko-KR">모든 원소를 한번씩 방문하기 위해서는

11
00:01:05,985 --> 00:01:07,718
for 루프가 두 번 있어야 합니다.</lang>

12
00:01:07,866 --> 00:01:11,294
<lang xml:lang="ko-KR">i는 위에서 아래로 움직이기 위해서 사용됩니다.</lang>

13
00:01:11,400 --> 00:01:15,068
<lang xml:lang="ko-KR">j는 주어진 로우에서 오른쪽 방향으로 움직입니다.</lang>

14
00:01:15,200 --> 00:01:18,301
<lang xml:lang="ko-KR">마지막 문장은 각각의 원소를 0과

15
00:01:18,401 --> 00:01:20,644
비교하여, 큰 것을 자신의 값으로 합니다.</lang>

